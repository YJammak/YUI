<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:yProperties="clr-namespace:YUI.WPF.YProperties">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml"/>
        <ResourceDictionary Source="YIcon.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--菜单项MenuItem样式YIconMenuItem-->
    <Style x:Key="YIconMenuItemStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{StaticResource YMenuBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource YMenuForeground}"/>
        <Setter Property="FontSize" Value="{StaticResource YFontSize}"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="yProperties:YAttachProperty.YIconSize" Value="18"/>
        <Setter Property="yProperties:YAttachProperty.YIconFontFamily" Value="/YUI.WPF;component/Resources/Fonts/#FontAwesome"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <!--Item-->
                    <Border  x:Name="border" Background="Transparent" Height="{TemplateBinding Height}" Opacity="1"
                   >
                        <Grid  VerticalAlignment="Center" Margin="{TemplateBinding Margin}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="icon_col" MaxWidth="35" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition Width="16" x:Name="arrow_col" SharedSizeGroup="MenumItemArrow"/>
                            </Grid.ColumnDefinitions>
                            <!--icon-->
                            <TextBlock x:Name="PART_Icon" Text="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" 
                                       Margin="{TemplateBinding yProperties:YAttachProperty.YIconMargin}"
                                       FontSize="{TemplateBinding yProperties:YAttachProperty.YIconSize}" Style="{StaticResource YIcon}"
                                       FontFamily="{TemplateBinding yProperties:YAttachProperty.YIconFontFamily}" Background="Transparent"
                           />
                            <!--Header-->
                            <ContentPresenter Grid.Column="1" x:Name="txtHeader" Margin="3,1,5,1" MinWidth="90"
                                              RecognizesAccessKey="True" VerticalAlignment="Center" ContentSource="Header"/>
                            <!--快捷键 InputGestureText 暂不支持你了 -->
                            <TextBlock Grid.Column="2" Margin="3,1,3,1" x:Name="IGTHost" Text="{TemplateBinding InputGestureText}" 
                                       FontSize="{TemplateBinding FontSize}"
                                       VerticalAlignment="Center" Visibility="Visible" Foreground="{TemplateBinding Foreground}"/>
                            <!--右指针-->
                            <TextBlock x:Name="PART_Arrow" Grid.Column="3" Text="&#xf0da;" Foreground="{TemplateBinding Foreground}" 
                                       FontSize="14">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource YIcon}">
                                        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem}}}"/>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <!--淡出子集菜单容器-->
                            <Popup Grid.Column="0" x:Name="SubMenuPopup" AllowsTransparency="true" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                                   Placement="Bottom"  Focusable="false" VerticalOffset="0"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                <Border SnapsToDevicePixels="True"
                                        Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                        CornerRadius="{TemplateBinding yProperties:YAttachProperty.YCornerRadius}" Margin="5"
                                        Padding="1"
                                        Effect="{StaticResource YDropShadow}">
                                    <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True" Margin="1">
                                        <StackPanel Margin="0" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <!--触发器-->
                    <ControlTemplate.Triggers>
                        <!--TopLevelHeader:第一级菜单（有子菜单）-->
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Arrow"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                            <Setter Property="Margin" Value="5,1,1,1" TargetName="PART_Icon"/>
                            <Setter Property="Margin" Value="1,1,6,1" TargetName="txtHeader"/>
                            <Setter Property="MinWidth" Value="10" TargetName="txtHeader"/>
                            <Setter Property="Width" Value="0" TargetName="arrow_col"/>
                        </Trigger>
                        <!--TopLevelItem 第一级菜单（无子级）-->
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Arrow"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                            <Setter Property="Margin" Value="5,1,1,1" TargetName="PART_Icon"/>
                            <Setter Property="Margin" Value="1,1,6,1" TargetName="txtHeader"/>
                            <Setter Property="MinWidth" Value="10" TargetName="txtHeader"/>
                            <Setter Property="Width" Value="0" TargetName="arrow_col"/>
                        </Trigger>
                        <!--SubmenuHeader:子菜单，有子菜单-->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_Arrow"/>
                            <Setter Property="Placement" Value="Right" TargetName="SubMenuPopup"/>
                        </Trigger>
                        <!--SubMenuItem:子菜单，无子级-->
                        <Trigger Property="Role" Value="SubMenuItem">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Arrow"/>
                        </Trigger>
                        <!--选中状态，优先级将高于Icon-->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="PART_Icon" Value="&#xf00c;" Property="Text"/>
                            <Setter TargetName="PART_Icon" Value="18" Property="FontSize"/>
                            <Setter TargetName="PART_Icon" Value="{StaticResource YCheckedForeground}" Property="Foreground"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Value="{StaticResource YDisableOpacity}" Property="Opacity"/>
                        </Trigger>
                        <!--高亮状态-->
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource YMenuMouseOverBackground}"/>
                            <Setter Property="Foreground" Value="{StaticResource YMenuMouseOverForeground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource YMenuPressedBackground}"/>
                            <Setter Property="Foreground" Value="{StaticResource YMenuPressedForeground}"/>
                        </Trigger>
                        <!--子菜单打开状态-->
                        <Trigger Property="IsSubmenuOpen" Value="true">
                            <Setter TargetName="PART_Arrow" Value="{StaticResource YCheckedForeground}" Property="Foreground"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--基于YIconMenuItem的默认样式，提供Header模板-->
    <Style x:Key="YMenuItemDefaultStyle" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource YIconMenuItemStyle}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock x:Name="txtHeader" FontSize="{Binding FontSize,RelativeSource={RelativeSource AncestorType={x:Type MenuItem},Mode=FindAncestor}}"
                               HorizontalAlignment="Stretch" Margin="3,1,5,1"
                               Text="{Binding Header,RelativeSource={RelativeSource AncestorType={x:Type MenuItem},Mode=FindAncestor}}" VerticalAlignment="Center"
                               Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType={x:Type MenuItem},Mode=FindAncestor}}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TopLevelHeader -->
    <ControlTemplate x:Key="TopLevelHeaderTemplateKey" TargetType="MenuItem">
        <Border Name="Border" Background="{TemplateBinding Background}">
            <Grid Margin="{TemplateBinding Padding}">
                <StackPanel Orientation="Horizontal" x:Name="border" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                    <!--icon-->
                    <TextBlock x:Name="PART_Icon" Text="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" 
                               FontSize="{TemplateBinding yProperties:YAttachProperty.YIconSize}" Style="{StaticResource YIcon}"
                               FontFamily="{TemplateBinding yProperties:YAttachProperty.YIconFontFamily}"
                               Margin="{TemplateBinding yProperties:YAttachProperty.YIconMargin}"    
                   />
                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" Name="HeaderHost"
                                      ContentSource="Header" RecognizesAccessKey="True"/>
                </StackPanel>
                <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" 
                       AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                    <Border Name="SubmenuBorder" SnapsToDevicePixels="True" 
                            Background="{Binding Path=(yProperties:YAttachProperty.YMenuPopupBackground), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem}}}" 
                            BorderBrush="{Binding Path=(yProperties:YAttachProperty.YMenuPopupBorderBrush), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem}}}"
                            BorderThickness="{Binding Path=(yProperties:YAttachProperty.YMenuPopupBorderThickness), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem}}}" 
                            CornerRadius="{Binding Path=(yProperties:YAttachProperty.YMenuPopupCornerRadius), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem}}}">
                        <VirtualizingStackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self},Path=(yProperties:YAttachProperty.YMouseOverBackground)}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=(yProperties:YAttachProperty.YDisableBackground)}"/>
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=(yProperties:YAttachProperty.YDisableForeground)}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- TopLevelItem -->
    <ControlTemplate x:Key="TopLevelItemTemplateKey" TargetType="MenuItem">
        <Border Name="Border" Background="{TemplateBinding Background}">
            <StackPanel Orientation="Horizontal" x:Name="border" VerticalAlignment="Center" 
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        Margin="{TemplateBinding Padding}">
                <!--icon-->
                <TextBlock x:Name="PART_Icon" Text="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" 
                           FontSize="{TemplateBinding yProperties:YAttachProperty.YIconSize}" Style="{StaticResource YIcon}"
                           FontFamily="{TemplateBinding yProperties:YAttachProperty.YIconFontFamily}"
                           Margin="{TemplateBinding yProperties:YAttachProperty.YIconMargin}"/>
                <Border Name="Check" Visibility="Collapsed" Margin="3 0 5 0" 
                        Background="Transparent" BorderThickness="0" VerticalAlignment="Center">
                    <TextBlock x:Name="CheckMark" FontFamily="/YUI.WPF;component/Resources/Fonts/#FontAwesome" Text="&#xf00c;" Foreground="{StaticResource YCheckedForeground}"
                               Background="Transparent" Visibility="Hidden" VerticalAlignment="Center"/>
                </Border>
                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" Name="HeaderHost"
                                  ContentSource="Header" RecognizesAccessKey="True"/>
            </StackPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self},Path=(yProperties:YAttachProperty.YMouseOverBackground)}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=(yProperties:YAttachProperty.YDisableBackground)}"/>
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=(yProperties:YAttachProperty.YDisableForeground)}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuItem -->
    <ControlTemplate x:Key="SubmenuItemTemplateKey" TargetType="MenuItem">
        <Border Name="Border" Background="{TemplateBinding Background}">
            <Grid Margin="{TemplateBinding Padding}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="PART_Icon"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <!--icon-->
                <TextBlock x:Name="PART_Icon" Text="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" 
                           FontSize="{TemplateBinding yProperties:YAttachProperty.YIconSize}" Style="{StaticResource YIcon}"
                           FontFamily="{TemplateBinding yProperties:YAttachProperty.YIconFontFamily}"
                           Margin="{TemplateBinding yProperties:YAttachProperty.YIconMargin}"/>
                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True"/>
                <Border Grid.Column="0" Name="Check" Visibility="Collapsed" Margin="3 0 5 0" 
                        Background="Transparent" BorderThickness="0" VerticalAlignment="Center">
                    <TextBlock x:Name="CheckMark" FontFamily="/YUI.WPF;component/Resources/Fonts/#FontAwesome" Text="&#xf00c;" Foreground="{StaticResource YCheckedForeground}"
                               Background="Transparent" Visibility="Hidden" VerticalAlignment="Center"/>
                </Border>
                <TextBlock x:Name="InputGestureText" Grid.Column="2" 
                           Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2" DockPanel.Dock="Right"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="PART_Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" 
                        Value="{Binding Path=(yProperties:YAttachProperty.YMouseOverBackground), RelativeSource={RelativeSource Self}}"
               />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=(yProperties:YAttachProperty.YDisableBackground)}"/>
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=(yProperties:YAttachProperty.YDisableForeground)}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuHeader -->
    <ControlTemplate x:Key="SubmenuHeaderTemplateKey" TargetType="MenuItem">
        <Border Name="Border" Background="{TemplateBinding Background}">
            <Grid Margin="{TemplateBinding Padding}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="PART_Icon"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <!--icon-->
                <TextBlock x:Name="PART_Icon" Text="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" 
                           FontSize="{TemplateBinding yProperties:YAttachProperty.YIconSize}" Style="{StaticResource YIcon}"
                           FontFamily="{TemplateBinding yProperties:YAttachProperty.YIconFontFamily}"
                           Margin="{TemplateBinding yProperties:YAttachProperty.YIconMargin}"/>
                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True"/>
                <TextBlock x:Name="InputGestureText" Grid.Column="2" 
                           Text="{TemplateBinding InputGestureText}" Margin="5,2,2,2"
                           DockPanel.Dock="Right"/>
                <Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center"
                      Data="M 0 0 L 0 7 L 4 3.5 Z"  Fill="{TemplateBinding Foreground}"/>
                <Popup Grid.Column="0" Name="Popup" Placement="Right"
                       HorizontalOffset="-4" IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                    <Border Name="SubmenuBorder" SnapsToDevicePixels="True"
                            Background="{Binding Path=(yProperties:YAttachProperty.YMenuPopupBackground), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem}}}" 
                            BorderBrush="{Binding Path=(yProperties:YAttachProperty.YMenuPopupBorderBrush), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem}}}"
                            BorderThickness="{Binding Path=(yProperties:YAttachProperty.YMenuPopupBorderThickness), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem}}}" 
                            CornerRadius="{Binding Path=(yProperties:YAttachProperty.YMenuPopupCornerRadius), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem}}}"
                            Margin="5"
                            Padding="1"
                            Effect="{StaticResource YDropShadow}">
                        <VirtualizingStackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" 
                        Value="{Binding Path=(yProperties:YAttachProperty.YMouseOverBackground), RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=(yProperties:YAttachProperty.YDisableBackground)}"/>
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=(yProperties:YAttachProperty.YDisableForeground)}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- MenuItem Style -->

    <Style x:Key="YMenuItemNoBorderStyle" TargetType="MenuItem">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Background" Value="{StaticResource YMenuBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource YMenuForeground}"/>
        <Setter Property="yProperties:YAttachProperty.YMouseOverForeground" Value="{StaticResource YMenuMouseOverForeground}"/>
        <Setter Property="yProperties:YAttachProperty.YMouseOverBackground" Value="{StaticResource YMenuMouseOverBackground}"/>
        <Setter Property="yProperties:YAttachProperty.YPressedForeground" Value="{StaticResource YMenuPressedForeground}"/>
        <Setter Property="yProperties:YAttachProperty.YPressedBackground" Value="{StaticResource YMenuPressedBackground}"/>
        <Setter Property="FontSize" Value="{StaticResource YFontSize}"/>
        <Setter Property="yProperties:YAttachProperty.YIconSize" Value="18"/>
        <Setter Property="yProperties:YAttachProperty.YIconFontFamily" Value="/YUI.WPF;component/Resources/Fonts/#FontAwesome"/>
        <Setter Property="yProperties:YAttachProperty.YCornerRadius" Value="0"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="yProperties:YAttachProperty.YMenuPopupBackground" Value="{StaticResource YMenuMouseOverForeground}"/>
        <Setter Property="yProperties:YAttachProperty.YMenuPopupBorderBrush" Value="Transparent"/>
        <Setter Property="yProperties:YAttachProperty.YMenuPopupBorderThickness" Value="0"/>
        <Setter Property="yProperties:YAttachProperty.YMenuPopupCornerRadius" Value="0"/>
        <Setter Property="yProperties:YAttachProperty.YIconMargin" Value="0 0 5 0"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource TopLevelHeaderTemplateKey}"/>
                <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource TopLevelItemTemplateKey}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource SubmenuHeaderTemplateKey}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource SubmenuItemTemplateKey}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--默认Menu样式-->
    <Style x:Key="YMenuDefaultStyle" TargetType="{x:Type Menu}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="yProperties:YAttachProperty.YCornerRadius" Value="5"/>
        <Setter Property="yProperties:YAttachProperty.YMenuPopupBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Background}"/>
        <Setter Property="yProperties:YAttachProperty.YMenuPopupBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=BorderBrush}"/>
        <Setter Property="yProperties:YAttachProperty.YMenuPopupBorderThickness" Value="{Binding RelativeSource={RelativeSource Self}, Path=BorderThickness}"/>
        <Setter Property="yProperties:YAttachProperty.YMenuPopupCornerRadius" Value="{Binding RelativeSource={RelativeSource Self}, Path=(yProperties:YAttachProperty.YCornerRadius)}"/>
        <Setter Property="yProperties:YAttachProperty.YMouseOverBackground" Value="{StaticResource YMenuMouseOverBackground}"/>
        <Setter Property="yProperties:YAttachProperty.YMouseOverForeground" Value="{StaticResource YMenuMouseOverForeground}"/>
        <Setter Property="yProperties:YAttachProperty.YPressedBackground" Value="{StaticResource YMenuPressedBackground}"/>
        <Setter Property="yProperties:YAttachProperty.YPressedForeground" Value="{StaticResource YMenuPressedForeground}"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type MenuItem}">
                    <Setter Property="BorderBrush" Value="{Binding Path=(yProperties:YAttachProperty.YMenuPopupBorderBrush), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Menu}, AncestorLevel=1}}"/>
                    <Setter Property="BorderThickness" Value="{Binding Path=(yProperties:YAttachProperty.YMenuPopupBorderThickness), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Menu}, AncestorLevel=1}}"/>
                    <Setter Property="Background" Value="{Binding Path=(yProperties:YAttachProperty.YMenuPopupBackground), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Menu}, AncestorLevel=1}}"/>
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Margin" Value="1"/>
                    <Setter Property="yProperties:YAttachProperty.YIconSize" Value="18"/>
                    <Setter Property="yProperties:YAttachProperty.YIconFontFamily" Value="/YUI.WPF;component/Resources/Fonts/#FontAwesome"/>
                    <Setter Property="yProperties:YAttachProperty.YCornerRadius" Value="{Binding Path=(yProperties:YAttachProperty.YMenuPopupCornerRadius), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Menu}, AncestorLevel=1}}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                <!--Item-->
                                <Border  x:Name="border" Background="Transparent" Height="{TemplateBinding Height}" Opacity="1">
                                    <Grid  VerticalAlignment="Center" Margin="{TemplateBinding Margin}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="icon_col" MaxWidth="35" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                            <ColumnDefinition Width="16" x:Name="arrow_col" SharedSizeGroup="MenumItemArrow"/>
                                        </Grid.ColumnDefinitions>
                                        <!--icon-->
                                        <TextBlock x:Name="PART_Icon" Text="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" Margin="{TemplateBinding yProperties:YAttachProperty.YIconMargin}"
                                                   FontSize="{TemplateBinding yProperties:YAttachProperty.YIconSize}" Style="{StaticResource YIcon}"
                                                   FontFamily="{TemplateBinding yProperties:YAttachProperty.YIconFontFamily}" Background="Transparent"
                                       />
                                        <!--Header-->
                                        <ContentPresenter Grid.Column="1" x:Name="txtHeader" Margin="3,1,5,1" MinWidth="90"
                                                          RecognizesAccessKey="True" VerticalAlignment="Center" ContentSource="Header"/>
                                        <!--快捷键 InputGestureText 暂不支持你了 -->
                                        <TextBlock Grid.Column="2" Margin="3,1,3,1" x:Name="IGTHost" Text="{TemplateBinding InputGestureText}" 
                                                   FontSize="{TemplateBinding FontSize}"
                                                   VerticalAlignment="Center" Visibility="Visible" Foreground="{TemplateBinding Foreground}"/>
                                        <!--右指针-->
                                        <TextBlock x:Name="PART_Arrow" Grid.Column="3" Text="&#xf0da;" Foreground="{TemplateBinding Foreground}" Style="{StaticResource YIcon}"/>
                                        <!--淡出子集菜单容器-->
                                        <Popup Grid.Column="0" x:Name="SubMenuPopup" AllowsTransparency="true" 
                                               IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                                               Placement="Bottom"  Focusable="false" VerticalOffset="0"
                                               PlacementTarget="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem}}}"
                                               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                            <Border SnapsToDevicePixels="True"
                                                    Background="{Binding Path=(yProperties:YAttachProperty.YMenuPopupBackground), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Menu}}}" 
                                                    BorderBrush="{Binding Path=(yProperties:YAttachProperty.YMenuPopupBorderBrush), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Menu}}}"
                                                    BorderThickness="{Binding Path=(yProperties:YAttachProperty.YMenuPopupBorderThickness), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Menu}}}" 
                                                    CornerRadius="{Binding Path=(yProperties:YAttachProperty.YMenuPopupCornerRadius), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Menu}}}"
                                                    Padding="1"
                                                    Effect="{StaticResource YDropShadow}">
                                                <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True" Margin="1">
                                                    <VirtualizingStackPanel Margin="0" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                                </Grid>
                                            </Border>
                                        </Popup>
                                    </Grid>
                                </Border>
                                <!--触发器-->
                                <ControlTemplate.Triggers>
                                    <!--TopLevelHeader:第一级菜单（有子菜单）-->
                                    <Trigger Property="Role" Value="TopLevelHeader">
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Arrow"/>
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                                        <Setter Property="Margin" Value="5,1,1,1" TargetName="PART_Icon"/>
                                        <Setter Property="Margin" Value="1,1,6,1" TargetName="txtHeader"/>
                                        <Setter Property="MinWidth" Value="10" TargetName="txtHeader"/>
                                        <Setter Property="Width" Value="0" TargetName="arrow_col"/>
                                    </Trigger>
                                    <!--TopLevelItem 第一级菜单（无子级）-->
                                    <Trigger Property="Role" Value="TopLevelItem">
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Arrow"/>
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                                        <Setter Property="Margin" Value="5,1,1,1" TargetName="PART_Icon"/>
                                        <Setter Property="Margin" Value="1,1,6,1" TargetName="txtHeader"/>
                                        <Setter Property="MinWidth" Value="10" TargetName="txtHeader"/>
                                        <Setter Property="Width" Value="0" TargetName="arrow_col"/>
                                    </Trigger>
                                    <!--SubmenuHeader:子菜单，有子菜单-->
                                    <Trigger Property="Role" Value="SubmenuHeader">
                                        <Setter Property="Visibility" Value="Visible" TargetName="PART_Arrow"/>
                                        <Setter Property="Placement" Value="Right" TargetName="SubMenuPopup"/>
                                    </Trigger>
                                    <!--SubMenuItem:子菜单，无子级-->
                                    <Trigger Property="Role" Value="SubMenuItem">
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Arrow"/>
                                    </Trigger>
                                    <!--选中状态，优先级将高于Icon-->
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter TargetName="PART_Icon" Value="&#xf00c;" Property="Text"/>
                                        <Setter TargetName="PART_Icon" Value="18" Property="FontSize"/>
                                        <Setter TargetName="PART_Icon" Value="{StaticResource YCheckedForeground}" Property="Foreground"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter TargetName="border" Value="{StaticResource YDisableOpacity}" Property="Opacity"/>
                                    </Trigger>
                                    <!--高亮状态-->
                                    <Trigger Property="IsHighlighted" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{Binding Path=(yProperties:YAttachProperty.YMouseOverBackground), RelativeSource={RelativeSource Self}}"/>
                                        <Setter Property="Foreground" Value="{Binding Path=(yProperties:YAttachProperty.YMouseOverForeground), RelativeSource={RelativeSource Self}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{Binding Path=(yProperties:YAttachProperty.YMouseOverBackground), RelativeSource={RelativeSource Self}}"/>
                                        <Setter Property="Foreground" Value="{Binding Path=(yProperties:YAttachProperty.YMouseOverForeground), RelativeSource={RelativeSource Self}}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{Binding Path=(yProperties:YAttachProperty.YPressedBackground), RelativeSource={RelativeSource Self}}"/>
                                        <Setter Property="Foreground" Value="{Binding Path=(yProperties:YAttachProperty.YPressedForeground), RelativeSource={RelativeSource Self}}"/>
                                    </Trigger>
                                    <!--子菜单打开状态-->
                                    <Trigger Property="IsSubmenuOpen" Value="true">
                                        <Setter TargetName="PART_Arrow" Value="{StaticResource YCheckedForeground}" Property="Foreground"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            CornerRadius="{TemplateBinding yProperties:YAttachProperty.YCornerRadius}"
                   >
                        <ItemsPresenter Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--默认右键菜单ContextMenu样式-->
    <Style x:Key="YContextMenuNoBorderStyle" TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="yProperties:YAttachProperty.YCornerRadius" Value="5"/>
        <Setter Property="yProperties:YAttachProperty.YMenuPopupBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Background}"/>
        <Setter Property="yProperties:YAttachProperty.YMenuPopupBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=BorderBrush}"/>
        <Setter Property="yProperties:YAttachProperty.YMenuPopupBorderThickness" Value="{Binding RelativeSource={RelativeSource Self}, Path=BorderThickness}"/>
        <Setter Property="yProperties:YAttachProperty.YMenuPopupCornerRadius" Value="{Binding RelativeSource={RelativeSource Self}, Path=(yProperties:YAttachProperty.YCornerRadius)}"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type MenuItem}">
                    <Setter Property="BorderBrush" Value="{Binding Path=(yProperties:YAttachProperty.YMenuPopupBorderBrush), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Menu}, AncestorLevel=1}}"/>
                    <Setter Property="BorderThickness" Value="{Binding Path=(yProperties:YAttachProperty.YMenuPopupBorderThickness), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Menu}, AncestorLevel=1}}"/>
                    <Setter Property="Background" Value="{Binding Path=(yProperties:YAttachProperty.YMenuPopupBackground), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Menu}, AncestorLevel=1}}"/>
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Margin" Value="1"/>
                    <Setter Property="yProperties:YAttachProperty.YIconSize" Value="18"/>
                    <Setter Property="yProperties:YAttachProperty.YIconFontFamily" Value="/YUI.WPF;component/Resources/Fonts/#FontAwesome"/>
                    <Setter Property="yProperties:YAttachProperty.YCornerRadius" Value="{Binding Path=(yProperties:YAttachProperty.YMenuPopupCornerRadius), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Menu}, AncestorLevel=1}}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                <!--Item-->
                                <Border  x:Name="border" Background="Transparent" Height="{TemplateBinding Height}" Opacity="1">
                                    <Grid  VerticalAlignment="Center" Margin="{TemplateBinding Margin}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="icon_col" MaxWidth="35" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                            <ColumnDefinition Width="16" x:Name="arrow_col" SharedSizeGroup="MenumItemArrow"/>
                                        </Grid.ColumnDefinitions>
                                        <!--icon-->
                                        <TextBlock x:Name="PART_Icon" Text="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" Margin="{TemplateBinding yProperties:YAttachProperty.YIconMargin}"
                                                   FontSize="{TemplateBinding yProperties:YAttachProperty.YIconSize}" Style="{StaticResource YIcon}"
                                                   FontFamily="{TemplateBinding yProperties:YAttachProperty.YIconFontFamily}" Background="Transparent"
                                       />
                                        <!--Header-->
                                        <ContentPresenter Grid.Column="1" x:Name="txtHeader" Margin="3,1,5,1" MinWidth="90"
                                                          RecognizesAccessKey="True" VerticalAlignment="Center" ContentSource="Header"/>
                                        <!--快捷键 InputGestureText 暂不支持你了 -->
                                        <TextBlock Grid.Column="2" Margin="3,1,3,1" x:Name="IGTHost" Text="{TemplateBinding InputGestureText}" 
                                                   FontSize="{TemplateBinding FontSize}"
                                                   VerticalAlignment="Center" Visibility="Visible" Foreground="{TemplateBinding Foreground}"/>
                                        <!--右指针-->
                                        <TextBlock x:Name="PART_Arrow" Grid.Column="3" Text="&#xf0da;" Foreground="{TemplateBinding Foreground}" Style="{StaticResource YIcon}"/>
                                        <!--淡出子集菜单容器-->
                                        <Popup Grid.Column="0" x:Name="SubMenuPopup" AllowsTransparency="true" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                                               Placement="Bottom"  Focusable="false" VerticalOffset="0"
                                               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                            <Border SnapsToDevicePixels="True"
                                                    Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                                    CornerRadius="{TemplateBinding yProperties:YAttachProperty.YCornerRadius}" Margin="5"
                                                    Padding="1"
                                                    Effect="{StaticResource YDropShadow}">
                                                <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True" Margin="1">
                                                    <StackPanel Margin="0" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                                </Grid>
                                            </Border>
                                        </Popup>
                                    </Grid>
                                </Border>
                                <!--触发器-->
                                <ControlTemplate.Triggers>
                                    <!--TopLevelHeader:第一级菜单（有子菜单）-->
                                    <Trigger Property="Role" Value="TopLevelHeader">
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Arrow"/>
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                                        <Setter Property="Margin" Value="5,1,1,1" TargetName="PART_Icon"/>
                                        <Setter Property="Margin" Value="1,1,6,1" TargetName="txtHeader"/>
                                        <Setter Property="MinWidth" Value="10" TargetName="txtHeader"/>
                                        <Setter Property="Width" Value="0" TargetName="arrow_col"/>
                                    </Trigger>
                                    <!--TopLevelItem 第一级菜单（无子级）-->
                                    <Trigger Property="Role" Value="TopLevelItem">
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Arrow"/>
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                                        <Setter Property="Margin" Value="5,1,1,1" TargetName="PART_Icon"/>
                                        <Setter Property="Margin" Value="1,1,6,1" TargetName="txtHeader"/>
                                        <Setter Property="MinWidth" Value="10" TargetName="txtHeader"/>
                                        <Setter Property="Width" Value="0" TargetName="arrow_col"/>
                                    </Trigger>
                                    <!--SubmenuHeader:子菜单，有子菜单-->
                                    <Trigger Property="Role" Value="SubmenuHeader">
                                        <Setter Property="Visibility" Value="Visible" TargetName="PART_Arrow"/>
                                        <Setter Property="Placement" Value="Right" TargetName="SubMenuPopup"/>
                                    </Trigger>
                                    <!--SubMenuItem:子菜单，无子级-->
                                    <Trigger Property="Role" Value="SubMenuItem">
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Arrow"/>
                                    </Trigger>
                                    <!--选中状态，优先级将高于Icon-->
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter TargetName="PART_Icon" Value="&#xf00c;" Property="Text"/>
                                        <Setter TargetName="PART_Icon" Value="18" Property="FontSize"/>
                                        <Setter TargetName="PART_Icon" Value="{StaticResource YCheckedForeground}" Property="Foreground"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter TargetName="border" Value="{StaticResource YDisableOpacity}" Property="Opacity"/>
                                    </Trigger>
                                    <!--高亮状态-->
                                    <Trigger Property="IsHighlighted" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource YMenuMouseOverBackground}"/>
                                        <Setter Property="Foreground" Value="{StaticResource YMenuMouseOverForeground}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource YMenuPressedBackground}"/>
                                        <Setter Property="Foreground" Value="{StaticResource YMenuPressedForeground}"/>
                                    </Trigger>
                                    <!--子菜单打开状态-->
                                    <Trigger Property="IsSubmenuOpen" Value="true">
                                        <Setter TargetName="PART_Arrow" Value="{StaticResource YCheckedForeground}" Property="Foreground"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            CornerRadius="{TemplateBinding yProperties:YAttachProperty.YCornerRadius}"
                            Margin="5" Effect="{StaticResource YDropShadow}"
                   >
                        <ItemsPresenter Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--默认右键菜单ContextMenu样式-->
    <Style x:Key="YContextMenuDefaultStyle" TargetType="{x:Type ContextMenu}">
        <Setter Property="HasDropShadow" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="{StaticResource YMenuBackground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource YMenuForeground}"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource YMenuItemDefaultStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Grid>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" Margin="5"
                                BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                CornerRadius="{TemplateBinding yProperties:YAttachProperty.YCornerRadius}"
                       >
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="0" Opacity="0.5"/>
                            </Border.Effect>
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle"
                                            Grid.IsSharedSizeScope="True" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            KeyboardNavigation.TabNavigation="Cycle"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="True">
                            <Setter TargetName="Border" Property="Effect" Value="{StaticResource YDropShadow}">
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--文本操作右键菜单-->
    <ContextMenu x:Key="YContextMenuTextBoxStyle" Style="{StaticResource YContextMenuDefaultStyle}">
        <MenuItem Command="ApplicationCommands.Cut" Icon="&#xe662;" Style="{DynamicResource YMenuItemDefaultStyle}"/>
        <MenuItem Command="ApplicationCommands.Copy" Icon="&#xe661;" Style="{DynamicResource YMenuItemDefaultStyle}"/>
        <MenuItem Command="ApplicationCommands.Paste" Icon="&#xe663;" Style="{DynamicResource YMenuItemDefaultStyle}"/>
    </ContextMenu>

</ResourceDictionary>